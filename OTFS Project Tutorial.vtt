WEBVTT

0a288c22-aa49-49d2-94a5-a0043413a652/386-0
00:00:09.129 --> 00:00:13.496
Hello everyone. My name is Fadi
Hantouli. Today I'm gonna give

0a288c22-aa49-49d2-94a5-a0043413a652/386-1
00:00:13.496 --> 00:00:17.932
you a a some explanation about
my design. I'm going to give you

0a288c22-aa49-49d2-94a5-a0043413a652/386-2
00:00:17.932 --> 00:00:22.229
a a small demo as you see here
we have the ODM system of OFDM

0a288c22-aa49-49d2-94a5-a0043413a652/386-3
00:00:22.229 --> 00:00:25.695
system. It has three parts,
first part called the

0a288c22-aa49-49d2-94a5-a0043413a652/386-4
00:00:25.695 --> 00:00:29.923
transmitter side, second part
called the channel. Third part

0a288c22-aa49-49d2-94a5-a0043413a652/386-5
00:00:29.923 --> 00:00:31.379
is the receiver side.

0a288c22-aa49-49d2-94a5-a0043413a652/417-0
00:00:33.879 --> 00:00:38.580
I'm using here the Matlab life
script because it's easy for me

0a288c22-aa49-49d2-94a5-a0043413a652/417-1
00:00:38.580 --> 00:00:43.058
to demonstrate it and easy to
simulate each block by itself

0a288c22-aa49-49d2-94a5-a0043413a652/417-2
00:00:43.058 --> 00:00:44.849
and add some text to it.

0a288c22-aa49-49d2-94a5-a0043413a652/428-0
00:00:45.759 --> 00:00:48.799
Here in this blocks I'm showing
the transmitter side.

0a288c22-aa49-49d2-94a5-a0043413a652/478-0
00:00:50.369 --> 00:00:55.701
Now let's go to each block in
the first block here, which is

0a288c22-aa49-49d2-94a5-a0043413a652/478-1
00:00:55.701 --> 00:01:01.208
the. I identified the parameters
of the system. Here we use 64

0a288c22-aa49-49d2-94a5-a0043413a652/478-2
00:01:01.208 --> 00:01:06.627
bits per channel, and we have 4
subcarrier and the block size

0a288c22-aa49-49d2-94a5-a0043413a652/478-3
00:01:06.627 --> 00:01:07.589
will be 16.

0a288c22-aa49-49d2-94a5-a0043413a652/486-0
00:01:08.279 --> 00:01:11.149
And the sake of the prefix be
length one.

0a288c22-aa49-49d2-94a5-a0043413a652/545-0
00:01:12.889 --> 00:01:17.670
Here we generate the data. We
use random function and MATLAB

0a288c22-aa49-49d2-94a5-a0043413a652/545-1
00:01:17.670 --> 00:01:22.686
random function. The size of it
will be between 1 * 64 which is

0a288c22-aa49-49d2-94a5-a0043413a652/545-2
00:01:22.686 --> 00:01:27.702
a victor and I just see here in
the right side it's showing the

0a288c22-aa49-49d2-94a5-a0043413a652/545-3
00:01:27.702 --> 00:01:32.718
values between zero and three.
The maximum is 3, the minimum is

0a288c22-aa49-49d2-94a5-a0043413a652/545-4
00:01:32.718 --> 00:01:34.599
0 and we have 64 points.

0a288c22-aa49-49d2-94a5-a0043413a652/569-0
00:01:37.059 --> 00:01:41.953
This is call it a dimidiata this
dummy data going to the cube.

0a288c22-aa49-49d2-94a5-a0043413a652/569-1
00:01:41.953 --> 00:01:44.129
Scan the QR QPSK modulation.

0a288c22-aa49-49d2-94a5-a0043413a652/577-0
00:01:45.169 --> 00:01:49.519
The output of it will be in
frequency domain.

0a288c22-aa49-49d2-94a5-a0043413a652/600-0
00:01:50.559 --> 00:01:54.450
And we also will have the same
size of it, which is 1 * 64. It

0a288c22-aa49-49d2-94a5-a0043413a652/600-1
00:01:54.450 --> 00:01:57.909
has 2 bath really and imaginary
number as you see here.

0a288c22-aa49-49d2-94a5-a0043413a652/633-0
00:02:01.069 --> 00:02:05.021
If you look to the right side
here we have blood for the QPC

0a288c22-aa49-49d2-94a5-a0043413a652/633-1
00:02:05.021 --> 00:02:09.039
escape. It showing the values
between maximum one and minimum

0a288c22-aa49-49d2-94a5-a0043413a652/633-2
00:02:09.039 --> 00:02:12.149
negative fund and we have some
values at the 0.

0a288c22-aa49-49d2-94a5-a0043413a652/679-0
00:02:17.669 --> 00:02:22.238
Here in this block he was we
just changed the dimension we

0a288c22-aa49-49d2-94a5-a0043413a652/679-1
00:02:22.238 --> 00:02:27.040
change in, we flip it upside,
not upside down with sit to the

0a288c22-aa49-49d2-94a5-a0043413a652/679-2
00:02:27.040 --> 00:02:31.765
right or to the left. That's
mean if the metrics one time 64

0a288c22-aa49-49d2-94a5-a0043413a652/679-3
00:02:31.765 --> 00:02:33.159
make it 64 time 1.

0a288c22-aa49-49d2-94a5-a0043413a652/744-0
00:02:35.539 --> 00:02:39.049
Now here in various Fourier
transform, as I said in the

0a288c22-aa49-49d2-94a5-a0043413a652/744-1
00:02:39.049 --> 00:02:42.997
beginning, the data we used to
have it in time domain and then

0a288c22-aa49-49d2-94a5-a0043413a652/744-2
00:02:42.997 --> 00:02:46.194
we have a queue, QPSK
modulation. The output of it

0a288c22-aa49-49d2-94a5-a0043413a652/744-3
00:02:46.194 --> 00:02:50.267
will be in frequency domain. Now
I need to change it back to the

0a288c22-aa49-49d2-94a5-a0043413a652/744-4
00:02:50.267 --> 00:02:54.216
time domain to change it to in
order to change it back in time

0a288c22-aa49-49d2-94a5-a0043413a652/744-5
00:02:54.216 --> 00:02:56.159
domain we have to take the IFD.

0a288c22-aa49-49d2-94a5-a0043413a652/779-0
00:02:57.769 --> 00:03:01.939
And I divide it to the first of
career. If you looked at the

0a288c22-aa49-49d2-94a5-a0043413a652/779-1
00:03:01.939 --> 00:03:05.767
right side, you're gonna see
each subcarrier with these

0a288c22-aa49-49d2-94a5-a0043413a652/779-2
00:03:05.767 --> 00:03:09.049
values. So each subcarrier will
have a 16 bits.

0a288c22-aa49-49d2-94a5-a0043413a652/829-0
00:03:10.829 --> 00:03:14.682
Here we add in a cycle prefix.
The way we add in the cycle.

0a288c22-aa49-49d2-94a5-a0043413a652/829-1
00:03:14.682 --> 00:03:18.727
Brief fix, we're going to each
subcarrier here we added at the

0a288c22-aa49-49d2-94a5-a0043413a652/829-2
00:03:18.727 --> 00:03:22.645
beginning. So at the subcarrier
one we added over here, over

0a288c22-aa49-49d2-94a5-a0043413a652/829-3
00:03:22.645 --> 00:03:26.241
here, over here. Over here.
That's mean we increase the

0a288c22-aa49-49d2-94a5-a0043413a652/829-4
00:03:26.241 --> 00:03:29.259
total piece by 4. So the total
will be 68 now.

0a288c22-aa49-49d2-94a5-a0043413a652/835-0
00:03:29.989 --> 00:03:31.779
After I'm adding the cycle
briefings.

0a288c22-aa49-49d2-94a5-a0043413a652/856-0
00:03:34.179 --> 00:03:38.315
If you look over here to the
first subcarrier speaking 17

0a288c22-aa49-49d2-94a5-a0043413a652/856-1
00:03:38.315 --> 00:03:41.239
time 117 time man Time 4, which
is a 68.

0a288c22-aa49-49d2-94a5-a0043413a652/867-0
00:03:43.449 --> 00:03:46.749
And then we flip it again, flip
the size of it.

0a288c22-aa49-49d2-94a5-a0043413a652/869-0
00:03:47.869 --> 00:03:48.399
Now.

0a288c22-aa49-49d2-94a5-a0043413a652/882-0
00:03:49.189 --> 00:03:53.288
Our data in time domain and
ready to transmit it. Now we

0a288c22-aa49-49d2-94a5-a0043413a652/882-1
00:03:53.288 --> 00:03:54.799
have the OFDM signal.

0a288c22-aa49-49d2-94a5-a0043413a652/906-0
00:03:56.119 --> 00:04:00.739
Here in the channel we use a WGN
channel. We have existing models

0a288c22-aa49-49d2-94a5-a0043413a652/906-1
00:04:00.739 --> 00:04:05.149
in the MATLAB so I don't have to
build it. So I use the MATLAB

0a288c22-aa49-49d2-94a5-a0043413a652/906-2
00:04:05.149 --> 00:04:05.709
command.

0a288c22-aa49-49d2-94a5-a0043413a652/939-0
00:04:07.589 --> 00:04:11.518
And the output of the channel
will be the received signal. So

0a288c22-aa49-49d2-94a5-a0043413a652/939-1
00:04:11.518 --> 00:04:15.068
whatever we did in the
transmitting side, we have to do

0a288c22-aa49-49d2-94a5-a0043413a652/939-2
00:04:15.068 --> 00:04:18.871
it in the receiver side in
reverse way right here from step

0a288c22-aa49-49d2-94a5-a0043413a652/939-3
00:04:18.871 --> 00:04:21.089
8 starting with the receiver
size.

0a288c22-aa49-49d2-94a5-a0043413a652/945-0
00:04:21.999 --> 00:04:23.009
The server side, sorry.

0a288c22-aa49-49d2-94a5-a0043413a652/961-0
00:04:24.509 --> 00:04:28.306
So our receiver side, the first
thing we need to remove the

0a288c22-aa49-49d2-94a5-a0043413a652/961-1
00:04:28.306 --> 00:04:29.129
cycle prefix.

0a288c22-aa49-49d2-94a5-a0043413a652/974-0
00:04:31.059 --> 00:04:34.789
And then take the free transform
to change it to the bind domain

0a288c22-aa49-49d2-94a5-a0043413a652/974-1
00:04:34.789 --> 00:04:35.019
and.

0a288c22-aa49-49d2-94a5-a0043413a652/992-0
00:04:35.639 --> 00:04:39.651
Changing from time domain to the
frequency domain and then make

0a288c22-aa49-49d2-94a5-a0043413a652/992-1
00:04:39.651 --> 00:04:42.159
it demodulation and then we'll
get the.

0a288c22-aa49-49d2-94a5-a0043413a652/995-0
00:04:44.039 --> 00:04:44.919
Original.

0a288c22-aa49-49d2-94a5-a0043413a652/1032-0
00:04:45.649 --> 00:04:49.967
Pits now because we add in some
noises from the channel here,

0a288c22-aa49-49d2-94a5-a0043413a652/1032-1
00:04:49.967 --> 00:04:54.077
the original bit is not gonna
look the same exactly as the

0a288c22-aa49-49d2-94a5-a0043413a652/1032-2
00:04:54.077 --> 00:04:58.256
received pits. So that's mean we
will have some error. It's

0a288c22-aa49-49d2-94a5-a0043413a652/1032-3
00:04:58.256 --> 00:04:59.789
called bit error rate.

0a288c22-aa49-49d2-94a5-a0043413a652/1038-0
00:05:00.969 --> 00:05:02.589
So this is the received signal.

0a288c22-aa49-49d2-94a5-a0043413a652/1056-0
00:05:03.459 --> 00:05:07.340
We have the same size, but
probably the values over here is

0a288c22-aa49-49d2-94a5-a0043413a652/1056-1
00:05:07.340 --> 00:05:08.699
not exactly the same.

0a288c22-aa49-49d2-94a5-a0043413a652/1078-0
00:05:11.079 --> 00:05:15.565
Here I have to do the plot bit
bit error rate. I did not do it

0a288c22-aa49-49d2-94a5-a0043413a652/1078-1
00:05:15.565 --> 00:05:19.909
because I'm up to my timeline.
I'm going to do it this week.

0a288c22-aa49-49d2-94a5-a0043413a652/1119-0
00:05:20.809 --> 00:05:24.909
So what they were, I explain
right now it's the OFDM. Now

0a288c22-aa49-49d2-94a5-a0043413a652/1119-1
00:05:24.909 --> 00:05:29.291
let's go a little bit big, how
we can advance in the OTFS. So

0a288c22-aa49-49d2-94a5-a0043413a652/1119-2
00:05:29.291 --> 00:05:33.674
what's the difference between
the OFDM and the OTFS OTFS need

0a288c22-aa49-49d2-94a5-a0043413a652/1119-3
00:05:33.674 --> 00:05:34.169
to add.

0a288c22-aa49-49d2-94a5-a0043413a652/1163-0
00:05:34.809 --> 00:05:39.236
Two blocks and this location in
the transmitter side and then

0a288c22-aa49-49d2-94a5-a0043413a652/1163-1
00:05:39.236 --> 00:05:43.163
receiver side and the
transmitter side. We have to add

0a288c22-aa49-49d2-94a5-a0043413a652/1163-2
00:05:43.163 --> 00:05:47.662
I SFD in various fast for really
transform and it has Weinberg

0a288c22-aa49-49d2-94a5-a0043413a652/1163-3
00:05:47.662 --> 00:05:52.089
transform here to change it to
the time domain. The outputted

0a288c22-aa49-49d2-94a5-a0043413a652/1163-4
00:05:52.089 --> 00:05:53.089
here would be.

0a288c22-aa49-49d2-94a5-a0043413a652/1181-0
00:05:53.609 --> 00:05:58.040
Uh, make it from 2 dimension
time domain to 1 dimension time

0a288c22-aa49-49d2-94a5-a0043413a652/1181-1
00:05:58.040 --> 00:06:01.019
domain and here we do it in
reverse way.

0a288c22-aa49-49d2-94a5-a0043413a652/1190-0
00:06:04.189 --> 00:06:06.449
The values is not exactly the
same.

0a288c22-aa49-49d2-94a5-a0043413a652/1260-0
00:06:09.649 --> 00:06:13.894
It looks different. Now I have
to compare between both of them

0a288c22-aa49-49d2-94a5-a0043413a652/1260-1
00:06:13.894 --> 00:06:18.005
to do the modulation between the
OTFS and the OFDM doing the

0a288c22-aa49-49d2-94a5-a0043413a652/1260-2
00:06:18.005 --> 00:06:22.048
blocked period rate. I'm going
to do it this week, so up to

0a288c22-aa49-49d2-94a5-a0043413a652/1260-3
00:06:22.048 --> 00:06:26.293
this week what I did so far. I
create the OFDM with it is some

0a288c22-aa49-49d2-94a5-a0043413a652/1260-4
00:06:26.293 --> 00:06:30.606
lesion I create the OTFS with it
is some relation and I'm going

0a288c22-aa49-49d2-94a5-a0043413a652/1260-5
00:06:30.606 --> 00:06:34.447
to do this week the compare
between them. So let me go a

0a288c22-aa49-49d2-94a5-a0043413a652/1260-6
00:06:34.447 --> 00:06:38.085
little bit back to my
presentation. My slide and this

0a288c22-aa49-49d2-94a5-a0043413a652/1260-7
00:06:38.085 --> 00:06:41.859
is slide. First slide I have the
introduction with the.

0a288c22-aa49-49d2-94a5-a0043413a652/1262-0
00:06:41.929 --> 00:06:42.649
40 offs.

0a288c22-aa49-49d2-94a5-a0043413a652/1297-0
00:06:44.539 --> 00:06:48.782
The purpose of the this
presentation to have a clear

0a288c22-aa49-49d2-94a5-a0043413a652/1297-1
00:06:48.782 --> 00:06:53.825
understanding what is the OTFS
and how can I use it or how can

0a288c22-aa49-49d2-94a5-a0043413a652/1297-2
00:06:53.825 --> 00:06:59.108
I jump between OFDM and OTFS and
So what is the different between

0a288c22-aa49-49d2-94a5-a0043413a652/1297-3
00:06:59.108 --> 00:07:00.149
both of them.

0a288c22-aa49-49d2-94a5-a0043413a652/1312-0
00:07:01.589 --> 00:07:06.493
The motivation is to come with
reliability. Technology be easy,

0a288c22-aa49-49d2-94a5-a0043413a652/1312-1
00:07:06.493 --> 00:07:08.409
be faster and be cheaper.

0a288c22-aa49-49d2-94a5-a0043413a652/1333-0
00:07:11.179 --> 00:07:16.122
Here we have a a little review
in the second slide and this is

0a288c22-aa49-49d2-94a5-a0043413a652/1333-1
00:07:16.122 --> 00:07:19.889
slide. I'll go over 20 citation
it 20 perverse.

0a288c22-aa49-49d2-94a5-a0043413a652/1344-0
00:07:20.469 --> 00:07:24.781
Uh identified what they're
talking about. I define their

0a288c22-aa49-49d2-94a5-a0043413a652/1344-1
00:07:24.781 --> 00:07:25.159
gaps.

0a288c22-aa49-49d2-94a5-a0043413a652/1365-0
00:07:25.849 --> 00:07:30.060
And then I go to the mythology.
In this mythology, this is

0a288c22-aa49-49d2-94a5-a0043413a652/1365-1
00:07:30.060 --> 00:07:33.629
slide, slide #3 and explaining
what I did so far.

0a288c22-aa49-49d2-94a5-a0043413a652/1371-0
00:07:34.309 --> 00:07:36.119
What strategies I use?

0a288c22-aa49-49d2-94a5-a0043413a652/1382-0
00:07:36.939 --> 00:07:40.749
And what's model I use and what
kind of software I use it here?

0a288c22-aa49-49d2-94a5-a0043413a652/1386-0
00:07:42.319 --> 00:07:43.229
In the results.

0a288c22-aa49-49d2-94a5-a0043413a652/1415-0
00:07:44.909 --> 00:07:48.862
I did some simulation here not
using the live script. I did the

0a288c22-aa49-49d2-94a5-a0043413a652/1415-1
00:07:48.862 --> 00:07:52.692
using the regular lab script
because when I'm going to do the

0a288c22-aa49-49d2-94a5-a0043413a652/1415-2
00:07:52.692 --> 00:07:53.619
bit error rate.

0a288c22-aa49-49d2-94a5-a0043413a652/1493-0
00:07:54.909 --> 00:07:59.541
I have to use the photo loop and
for loop. It's hard to do it to

0a288c22-aa49-49d2-94a5-a0043413a652/1493-1
00:07:59.541 --> 00:08:03.673
break all the function in
different plugs we have to with

0a288c22-aa49-49d2-94a5-a0043413a652/1493-2
00:08:03.673 --> 00:08:08.163
the old function and when you
plug so this one I did it and we

0a288c22-aa49-49d2-94a5-a0043413a652/1493-3
00:08:08.163 --> 00:08:12.580
get run by Matlab script which
is I'm going to put it in live

0a288c22-aa49-49d2-94a5-a0043413a652/1493-4
00:08:12.580 --> 00:08:16.927
script next week but up to now
what I have so far we have to

0a288c22-aa49-49d2-94a5-a0043413a652/1493-5
00:08:16.927 --> 00:08:21.274
line the first line represent
the OFDM and the blue line the

0a288c22-aa49-49d2-94a5-a0043413a652/1493-6
00:08:21.274 --> 00:08:22.129
present the.

0a288c22-aa49-49d2-94a5-a0043413a652/1527-0
00:08:23.019 --> 00:08:29.174
Otfs and I can see clearly that
the two different between the

0a288c22-aa49-49d2-94a5-a0043413a652/1527-1
00:08:29.174 --> 00:08:35.230
performance I can see when SNR
it's high, the bit error rate

0a288c22-aa49-49d2-94a5-a0043413a652/1527-2
00:08:35.230 --> 00:08:39.599
for the OTFS is much smaller
than the OFDM.

0a288c22-aa49-49d2-94a5-a0043413a652/1548-0
00:08:41.209 --> 00:08:44.914
That's me. This is good Maya.
Good idea. Good result. That's

0a288c22-aa49-49d2-94a5-a0043413a652/1548-1
00:08:44.914 --> 00:08:47.829
me in the OTFS is much better
than the of OFDM.

0a288c22-aa49-49d2-94a5-a0043413a652/1586-0
00:08:50.869 --> 00:08:54.939
This is slide. We have some
discussion why we have this

0a288c22-aa49-49d2-94a5-a0043413a652/1586-1
00:08:54.939 --> 00:08:59.591
result and what does mean this
result, the OTFS why I'm looking

0a288c22-aa49-49d2-94a5-a0043413a652/1586-2
00:08:59.591 --> 00:09:03.951
for it, why it's reliable?
What's the advantage of using 2D

0a288c22-aa49-49d2-94a5-a0043413a652/1586-3
00:09:03.951 --> 00:09:04.969
then using 1D?

0a288c22-aa49-49d2-94a5-a0043413a652/1599-0
00:09:05.719 --> 00:09:08.679
When do you wishes the of DM 2D,
which is the OTFS?

0a288c22-aa49-49d2-94a5-a0043413a652/1617-0
00:09:10.909 --> 00:09:14.195
In the conclusion here, we have
some challenges. The challenges

0a288c22-aa49-49d2-94a5-a0043413a652/1617-1
00:09:14.195 --> 00:09:16.249
I have, the personal challenges
I have.

0a288c22-aa49-49d2-94a5-a0043413a652/1648-0
00:09:16.649 --> 00:09:20.786
A. The sources I have a hard
time to find or to understand

0a288c22-aa49-49d2-94a5-a0043413a652/1648-1
00:09:20.786 --> 00:09:25.344
the mathematical equation, so I
have to go over some material to

0a288c22-aa49-49d2-94a5-a0043413a652/1648-2
00:09:25.344 --> 00:09:28.219
understand what does mean each
equation.

0a288c22-aa49-49d2-94a5-a0043413a652/1715-0
00:09:29.309 --> 00:09:33.006
The limitation here is we have
some complicity with the

0a288c22-aa49-49d2-94a5-a0043413a652/1715-1
00:09:33.006 --> 00:09:37.033
receiver. The receiver we have
to do a lot of polling for it

0a288c22-aa49-49d2-94a5-a0043413a652/1715-2
00:09:37.033 --> 00:09:41.060
and the receiver hardware. Also
it's expensive, but I did so

0a288c22-aa49-49d2-94a5-a0043413a652/1715-3
00:09:41.060 --> 00:09:44.757
far. It's just a simulation in
the software. The future

0a288c22-aa49-49d2-94a5-a0043413a652/1715-4
00:09:44.757 --> 00:09:48.322
application, the future
application. We can use it in

0a288c22-aa49-49d2-94a5-a0043413a652/1715-5
00:09:48.322 --> 00:09:52.481
different applications, we can
use it in vehicles to vehicles.

0a288c22-aa49-49d2-94a5-a0043413a652/1715-6
00:09:52.481 --> 00:09:56.244
Probably these days we have a
lot of people who drive in

0a288c22-aa49-49d2-94a5-a0043413a652/1715-7
00:09:56.244 --> 00:09:58.159
electrical car or smart cars.

0a288c22-aa49-49d2-94a5-a0043413a652/1736-0
00:09:58.639 --> 00:10:03.587
The being controlled from the
towers and the O TFs. The good

0a288c22-aa49-49d2-94a5-a0043413a652/1736-1
00:10:03.587 --> 00:10:08.129
thing about it is faster than
the OFDM and much secure.

0a288c22-aa49-49d2-94a5-a0043413a652/1770-0
00:10:11.309 --> 00:10:15.477
This is the acknowledgement we
have some help from Doctor Billy

0a288c22-aa49-49d2-94a5-a0043413a652/1770-1
00:10:15.477 --> 00:10:19.514
and Doctor Sumit. Dr. Billy was
providing us with the sources

0a288c22-aa49-49d2-94a5-a0043413a652/1770-2
00:10:19.514 --> 00:10:21.989
and materials with a doctoral
summer.

0a288c22-aa49-49d2-94a5-a0043413a652/1774-0
00:10:24.009 --> 00:10:25.249
This is my references.

0a288c22-aa49-49d2-94a5-a0043413a652/1784-0
00:10:26.079 --> 00:10:29.209
All of this paper is I triple E
papers.

0a288c22-aa49-49d2-94a5-a0043413a652/1822-0
00:10:29.929 --> 00:10:34.482
Also, I got some materials from
the GitHub. There is some quotes

0a288c22-aa49-49d2-94a5-a0043413a652/1822-1
00:10:34.482 --> 00:10:38.754
over here is not exactly what I
have. This is just a regular

0a288c22-aa49-49d2-94a5-a0043413a652/1822-2
00:10:38.754 --> 00:10:42.606
quarters now a live script
MATLAB code. And also I was

0a288c22-aa49-49d2-94a5-a0043413a652/1822-3
00:10:42.606 --> 00:10:46.599
looking for some quick quote
from MATLAB exchange files.

0a288c22-aa49-49d2-94a5-a0043413a652/1829-0
00:10:47.799 --> 00:10:49.769
And this is the end of my
presentation.